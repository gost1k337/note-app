{"version":3,"sources":["context/alert/alertContext.js","context/firebase/firebaseContext.js","components/Form.js","components/Notes.js","components/Loader.js","pages/Home.js","pages/About.js","components/Navbar.js","components/Alert.js","context/alert/alertReducer.js","context/types.js","context/alert/AlertState.js","context/firebase/firebaseReducer.js","context/firebase/FirebaseState.js","App.js","serviceWorker.js","index.js"],"names":["AlertContext","createContext","FirebaseContext","Form","useState","value","setValue","alert","useContext","firebase","onSubmit","event","preventDefault","trim","addNote","then","show","catch","className","type","placeholder","onChange","e","target","Notes","notes","onRemove","styles","note","display","justifyContent","alignItems","strong","marginRight","TransitionGroup","component","map","CSSTransition","key","id","classNames","timeout","style","title","Date","toLocaleString","onClick","Loader","role","Home","loading","fetchNotes","removeNote","useEffect","About","Navbar","to","Alert","hide","in","visible","enter","exit","mountOnEnter","unmountOnExit","text","aria-label","aria-hidden","handlers","state","payload","alertReducer","action","DEFAULT","AlertState","children","useReducer","dispatch","Provider","filter","firebaseReducer","url","process","FirebaseState","showLoader","a","axios","get","res","data","Object","keys","date","toJSON","post","name","Error","message","delete","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.35c748aa.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nexport const AlertContext = createContext()\r\n","import { createContext } from 'react'\r\n\r\nexport const FirebaseContext = createContext()\r\n","import React, { useState, useContext } from 'react'\r\nimport { AlertContext } from \"../context/alert/alertContext\";\r\nimport { FirebaseContext } from \"../context/firebase/firebaseContext\";\r\n\r\nconst Form = () => {\r\n\tconst [value, setValue] = useState('')\r\n\tconst alert = useContext(AlertContext)\r\n\tconst firebase = useContext(FirebaseContext)\r\n\tconst submitHandler = event => {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tif (value.trim()) {\r\n\t\t\tfirebase.addNote(value.trim())\r\n\t\t\t\t.then(() => alert.show('Note has been created', 'success'))\r\n\t\t\t\t.catch(() => {\r\n\t\t\t\t\talert.show('Something wrong...', 'danger')\r\n\t\t\t\t})\r\n\t\t\tsetValue('')\r\n\t\t} else {\r\n\t\t\talert.show('Enter a title for the note')\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={submitHandler}>\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tplaceholder=\"Введите название заметки\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={e => setValue(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\"\r\n\r\nconst Notes = ({ notes, onRemove }) => {\r\n\tconst styles = {\r\n\t\tnote: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tjustifyContent: 'space-between',\r\n\t\t\talignItems: 'center'\r\n\t\t},\r\n\t\tstrong: {\r\n\t\t\tmarginRight: '1rem'\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<TransitionGroup component=\"ul\" className=\"list-group\">\r\n\t\t\t{ notes.map(note => (\r\n\t\t\t\t<CSSTransition\r\n\t\t\t\t\tkey={note.id}\r\n\t\t\t\t\tclassNames={'note'}\r\n\t\t\t\t\ttimeout={800}\r\n\t\t\t\t>\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tstyle={styles.note}\r\n\t\t\t\t\t\tclassName=\"list-group-item\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<strong style={styles.strong}>{note.title}</strong>\r\n\t\t\t\t\t\t\t<small>{ new Date().toLocaleString() }</small>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button onClick={() => onRemove(note.id)} type=\"button\" className=\"btn btn-outline-danger btn-sm\">&times;</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</CSSTransition>\r\n\t\t\t)) }\r\n\t\t</TransitionGroup>\r\n\t)\r\n}\r\n\r\nexport default Notes\r\n","import React from \"react\"\r\n\r\nconst Loader = () => (\r\n\t<div className=\"text-center\">\r\n\t\t<div className=\"spinner-border\" role=\"status\">\r\n\t\t\t<span className=\"sr-only\">Loading...</span>\r\n\t\t</div>\r\n\t</div>\r\n)\r\n\r\nexport default Loader\r\n","import React, { Fragment, useContext, useEffect } from 'react'\r\nimport Form from './../components/Form'\r\nimport Notes from './../components/Notes'\r\nimport Loader from \"../components/Loader\"\r\nimport { FirebaseContext } from \"../context/firebase/firebaseContext\"\r\n\r\nconst Home = () => {\r\n\tconst { loading, notes, fetchNotes, removeNote } = useContext(FirebaseContext)\r\n\tuseEffect(() => {\r\n\t\tfetchNotes()\r\n\r\n\t}, [])\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Form />\r\n\r\n\t\t\t<hr/>\r\n\r\n\t\t\t{ loading ? <Loader /> : <Notes notes={notes} onRemove={removeNote} />}\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nconst About = () => (\r\n\t<div className=\"jumbotron jumbotron-fluid\">\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"display-4\">Best react app</div>\r\n\t\t\t<p className=\"lead\">Application version <strong>1.0.0</strong></p>\r\n\t\t</div>\r\n\t</div>\r\n)\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nconst Navbar = () => (\r\n\t<nav className=\"navbar navbar-dark navbar-expand-lg bg-primary\">\r\n\t\t<div className=\"navbar-brand\">\r\n\t\t\tNote app\r\n\t\t</div>\r\n\r\n\t\t<ul className=\"navbar-nav\">\r\n\t\t\t<li className=\"nav-item active\">\r\n\t\t\t\t<NavLink to=\"/\" className=\"nav-link\">Home</NavLink>\r\n\t\t\t</li>\r\n\r\n\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t<NavLink to=\"/about\" className=\"nav-link\">About</NavLink>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t</nav>\r\n)\r\n\r\nexport default Navbar\r\n","import React, { useContext } from 'react'\r\nimport { AlertContext } from \"../context/alert/alertContext\";\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nconst Alert = () => {\r\n\r\n\tconst { alert, hide } = useContext(AlertContext)\r\n\r\n\treturn (\r\n\t\t<CSSTransition\r\n\t\t\tin={alert.visible}\r\n\t\t\ttimeout={{\r\n\t\t\t\tenter: 500,\r\n\t\t\t\texit: 350\r\n\t\t\t}}\r\n\t\t\tclassNames={'alert'}\r\n\t\t\tmountOnEnter\r\n\t\t\tunmountOnExit\r\n\t\t>\r\n\t\t\t<div className={`alert alert-${ alert.type || 'warning' } alert-dismissible fade show`}>\r\n\t\t\t\t<strong style={{marginRight: '1rem'}}>Warning!</strong>\r\n\t\t\t\t{ alert.text }\r\n\t\t\t\t<button onClick={hide} className=\"close\" type=\"button\" aria-label=\"Close\">\r\n\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</CSSTransition>\r\n\t)\r\n}\r\n\r\nexport default Alert\r\n","import { SHOW_ALERT, HIDE_ALERT } from \"../types\";\r\n\r\nconst handlers = {\r\n\t[SHOW_ALERT]: (state, { payload }) => ({ ...payload, visible: true }),\r\n\t[HIDE_ALERT]: state => ({ ...state, visible: false }),\r\n\tDEFAULT: state => state\r\n}\r\n\r\nexport const alertReducer = (state, action) => {\r\n\tconst handle = handlers[action.type] || handlers.DEFAULT\r\n\treturn handle(state, action)\r\n}\r\n","export const SHOW_ALERT = 'SHOW_ALERT'\r\nexport const HIDE_ALERT = 'HIDE_ALERT'\r\nexport const SHOW_LOADER = 'SHOW_LOADER'\r\nexport const ADD_NOTE = 'ADD_NOTE'\r\nexport const FETCH_NOTES = 'FETCH_NOTES'\r\nexport const REMOVE_NOTE = 'REMOVE_NOTE'\r\n","import React, { useReducer }  from 'react'\r\nimport { AlertContext } from \"./alertContext\";\r\nimport { alertReducer } from \"./alertReducer\";\r\nimport { HIDE_ALERT, SHOW_ALERT } from \"../types\";\r\n\r\nconst AlertState = ({ children }) => {\r\n\tconst [state, dispatch] = useReducer(alertReducer, { visible: false })\r\n\r\n\tconst show = (text, type = 'warning') => {\r\n\t\tdispatch({\r\n\t\t\ttype: SHOW_ALERT,\r\n\t\t\tpayload: { text, type }\r\n\t\t})\r\n\t}\r\n\r\n\tconst hide = () => dispatch({ type: HIDE_ALERT })\r\n\r\n\treturn (\r\n\t\t<AlertContext.Provider value={{ show, hide, alert: state }}>\r\n\t\t\t{ children }\r\n\t\t</AlertContext.Provider>\r\n\t)\r\n}\r\n\r\nexport default AlertState\r\n","import { SHOW_LOADER, ADD_NOTE, FETCH_NOTES, REMOVE_NOTE} from \"../types\";\r\n\r\nconst handlers = {\r\n\t[SHOW_LOADER]: state => ({ ...state, loading: true }),\r\n\t[ADD_NOTE]: (state, { payload }) => ({ ...state, notes: [...state.notes, payload] }),\r\n\t[FETCH_NOTES]: (state, { payload }) => ({ ...state, notes: payload, loading: false }),\r\n\t[REMOVE_NOTE]: (state, { payload }) => (\r\n\t\t{ ...state, notes: state.notes.filter(note => note.id !== payload ) }),\r\n\tDEFAULT: state => state\r\n}\r\n\r\nexport const firebaseReducer = (state, action) => {\r\n\tconst handle = handlers[action.type] || handlers.DEFAULT\r\n\treturn handle(state, action)\r\n}\r\n","import React, {useReducer} from 'react'\r\nimport axios from 'axios'\r\nimport { FirebaseContext } from \"./firebaseContext\";\r\nimport { firebaseReducer } from \"./firebaseReducer\";\r\nimport {ADD_NOTE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER} from \"../types\";\r\n\r\nconst url = process.env.REACT_APP_DB_URL\r\n\r\nexport const FirebaseState = ({ children }) => {\r\n\tconst initialState = {\r\n\t\tnotes: [],\r\n\t\tloading: false\r\n\t}\r\n\tconst [state, dispatch] = useReducer(firebaseReducer, initialState)\r\n\r\n\tconst showLoader = () => dispatch({ type: SHOW_LOADER })\r\n\r\n\tconst fetchNotes = async () => {\r\n\t\tshowLoader()\r\n\t\tconst res = await axios.get(`${url}/notes.json`)\r\n\r\n\t\tif (res.data) {\r\n\t\t\tconst payload = Object.keys(res.data).map(key => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...res.data[key],\r\n\t\t\t\t\tid: key\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tdispatch({ type: FETCH_NOTES, payload })\r\n\t\t} else {\r\n\t\t\tdispatch({ type: FETCH_NOTES, payload: [] })\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst addNote = async title => {\r\n\t\tconst note = {\r\n\t\t\ttitle,\r\n\t\t\tdate: new Date().toJSON()\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post(`${url}/notes.json`, note)\r\n\t\t\tconst payload = {\r\n\t\t\t\t...note,\r\n\t\t\t\tid: res.data.name\r\n\t\t\t}\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ADD_NOTE,\r\n\t\t\t\tpayload\r\n\t\t\t})\r\n\t\t} catch(e) {\r\n\t\t\tthrow new Error(e.message)\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst removeNote = async id => {\r\n\t\tawait axios.delete(`${url}/notes/${id}.json`)\r\n\r\n\t\tdispatch({ type: REMOVE_NOTE, payload: id })\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FirebaseContext.Provider value={{\r\n\t\t\tshowLoader, removeNote, addNote, fetchNotes,\r\n\t\t\tloading: state.loading,\r\n\t\t\tnotes: state.notes\r\n\t\t}}>\r\n\t\t\t{ children }\r\n\t\t</FirebaseContext.Provider>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport Home from './pages/Home'\r\nimport About from './pages/About'\r\nimport Navbar from './components/Navbar'\r\nimport Alert from './components/Alert'\r\nimport AlertState from './context/alert/AlertState'\r\nimport {FirebaseState} from \"./context/firebase/FirebaseState\";\r\n\r\nfunction App() {\r\n  return (\r\n    <FirebaseState>\r\n      <AlertState>\r\n        <BrowserRouter>\r\n          <Navbar />\r\n          <div className=\"container pt-4\">\r\n            <Alert />\r\n            <Switch>\r\n              <Route path={'/'} exact component={Home} />\r\n              <Route path={'/about'} exact component={About} />\r\n            </Switch>\r\n          </div>\r\n        </BrowserRouter>\r\n      </AlertState>\r\n    </FirebaseState>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}